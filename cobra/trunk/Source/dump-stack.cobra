class Program

	def main is shared
		Program().run
				
	def run
		print 1
		Console.out.flush
		t = ['foo', 'bar', 'baz', Customer('Apple Inc.', 789_109.00)]
		d = {'a': 1, 'b': 2, 'c' : 3}
		.foo(5, 7, 'qwerty')
		print 2
	
	var _customer as Customer?
	
	get customer from var
	
	def foo(x as int, y as int, name as String)
		sum = x + y
		name = 'aoeu'
		c = _customer = Customer('Castlewood Consulting', 1042.17)
		for i = 0 .. 3
			print i
		for j in [0, 1, 2]
			print j
		assert x > _customer.balance
	
	def toString as String is override
		return 'Program(37, "aoeu")'

	get age as int
		return 33
		
	get name as String
		return 'Program'


class Customer

	var _name as String
	var _balance as decimal
	
	cue init(name as String, balance as decimal)
		_name = name
		_balance = balance
		
	get name as String
		return _name
		
	get balance as decimal
		return _balance

	get fubar as String
		throw Exception('fubar!')
		
	def toString as String is override
		return '[.getType.name]([_name], [_balance])'
