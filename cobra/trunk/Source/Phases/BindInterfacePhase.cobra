class BindInterfacePhase inherits Phase
	"""
	Bind the AST nodes for var types, parameter types, return types, etc. to their actual types.
	Does not look inside implementations of methods and properties; only at the interface/API of the types.
	"""

	cue init(c as Compiler)
		base.init(c)

	get description as String is override
		return 'Binding interface'

	def innerRun is override
		c = .compiler
		c.fixNilableMemberSigs
		for basicType in c.basicTypes
			basicType.bindInt
		c.objectType.bindInt
		c.stringType.bindInt
		c.dynamicType.bindInt
		c.passThroughType.bindInt
		c.voidType.bindInt
		for mod in c.modules.clone
			c.curModule = mod
			try
				mod.bindInt
			catch ce as SourceException
				c.recordError(ce)


class Compiler is partial

	def isBindingInt as bool
		return .curPhase inherits BindInterfacePhase
