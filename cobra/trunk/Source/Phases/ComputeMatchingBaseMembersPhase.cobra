class ComputeMatchingBaseMembersPhase inherits Phase
	"""
	For each member (method, property, etc.), compute its matching member from the base type, if any.
	A member such as `def foo(i as int)` may have no matching base member. Or the base type of its
	enclosing type may also define `def foo(i as int)` in which case this phase will determine that
	and set a reference to it.
	"""

	cue init(c as Compiler)
		base.init(c)

	get description as String is override
		return 'Computing matching base members'

	def innerRun is override
		c = .compiler
		for mod in c.modules
			c.curModule = mod
			try
				mod.computeMatchingBaseMembers
			catch se as SourceException
				c.recordError(se)
