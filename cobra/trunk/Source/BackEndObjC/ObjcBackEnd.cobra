class ObjcBackEnd inherits BackEnd

	cue init(compiler as Compiler)
		base.init(compiler)

	def makePhases(phases as IList<of Phase>) is override
		phases.add(GenerateObjcCodePhase(.compiler))
		phases.add(CompileObjcCodePhase(.compiler))

	def computeOutName as String is override
		return .compiler.computeOutNameObjc


class GenerateObjcCodePhase inherits Phase

	cue init(c as Compiler)
		base.init(c)

	get description as String is override
		return 'Generating Objective-C code'

	def innerRun is override
		c = .compiler
		c.writeObjc  # extension method
		if c.willWriteTestInvocation
			c.writeObjcTestInvocation


class CompileObjcCodePhase inherits Phase

	cue init(c as Compiler)
		base.init(c)

	get description as String is override
		return 'Compiling Objective-C code'

	def innerRun is override
		.compiler.compileObjc
