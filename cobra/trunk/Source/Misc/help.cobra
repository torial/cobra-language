use System.Reflection

enum E
	A
	B
	C


class A

	get one as int
		return 1


class B inherits A

	get two as int
		return 2

	pro name as String
		get
			return 'name'
		set
			pass

	def over1(i as int)
		pass
	
	def over2(s as String)
		pass

	def main
		@help this
		s = 'aoeu' to ?
		len = @help s.length
		@help s.replace('x', 'y')
		@help assert len > 0
		@help s
		t = @help ['foo', 'bar']
		a = @help Assembly.getEntryAssembly
		b = @help B()
		@help B
		.@help
		s.@help
		@help E
		@help StringComparison
		@help IEofInt
		trace len, t, a, b


extend A

	def zero as int
		return 0


extend B

	def three as int
		return 3


class IEofInt implements IEnumerable<of int>

	def getEnumerator as IEnumerator<of int>
		return [1, 2, 3].getEnumerator

	def getEnumerator as System.Collections.IEnumerator
		implements System.Collections.IEnumerable
		return .getEnumerator
