class JvmBackEnd inherits BackEnd

	cue init(compiler as Compiler)
		base.init(compiler)

	def makePhases(phases as IList<of Phase>) is override
		phases.add(GenerateJavaCodePhase(.compiler))
		phases.add(CompileJavaCodePhase(.compiler))
		
	def computeOutName as String is override
		return .compiler.computeOutNameJava 
		

class GenerateJavaCodePhase inherits Phase

	cue init(c as Compiler)
		base.init(c)

	get description as String is override
		return 'Generating Java code'

	def innerRun is override
		c = .compiler
		c.writeJava  # extension method
		if c.willWriteTestInvocation
			c.writeJavaTestInvocation


class CompileJavaCodePhase inherits Phase

	cue init(c as Compiler)
		base.init(c)

	get description as String is override
		return 'Compiling Java code'

	def innerRun is override
		.compiler.compileJava
