# a double underscore marks a member as private by default

class X

	var __a as int
	
	get __b as int
		return 1

	set __c as int
		pass

	pro __d as int
		get
			return 1
		set
			pass

	def __e
		pass


class Y
	inherits X

	get __b as int is override  # .error. cannot override
		return 2

	set __c as int is override  # .error. cannot override
		pass

	pro __d as int is override
		get  # .error. cannot override
			return 2
		set  # .error. cannot override
			pass

	def __e is override  # .error. cannot override
		pass


class Test

	def main is shared
		x = X()
		print x.__a  # .error. cannot access
		print x.__b  # .error. cannot access
		x.__c = 5  # .error. cannot access
		print x.__d  # .error. cannot access
		x.__d = 5  # .error. cannot access
		x.__e  # .error. cannot access
