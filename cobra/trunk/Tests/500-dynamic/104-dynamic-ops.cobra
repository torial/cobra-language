"""
The `dynamic` type crossed with operators.
"""

class Test

	def main is shared
		Test().run

	def run
		.testDynamic
		.testNilableDynamic
		.testNilableAndNotDynamic
		.testMixedDynamic
		.testEquality
		.testComparison
		.testBinaryArithmetic
		.testUnaryArithmetic
		.testAugmentedAssignment
		.testBoolOps

	def testDynamic
		x as dynamic = 2
		y as dynamic = 4
		assert x * y == 8

		x = 'aoeu'
		y = 'aoeu'
		assert x + y == 'aoeuaoeu'

	def testNilableDynamic
		x as dynamic? = 2
		y as dynamic? = 4
		assert x * y == 8

		x = 'aoeu'
		y = 'aoeu'
		assert x + y == 'aoeuaoeu'

	def testNilableAndNotDynamic
		x as dynamic? = 2
		y as dynamic = 4
		assert x * y == 8

		x = 'aoeu'
		y = 'aoeu'
		assert x + y == 'aoeuaoeu'

	def testMixedDynamic
		x as dynamic? = 2
		y as dynamic = 2
		assert x * 4 == 8
		assert 4 * x == 8
		assert y * 4 == 8
		assert 4 * y == 8

		x = 'aoeu'
		y = 'aoeu'
		assert x + 'aoeu' == 'aoeuaoeu'
		assert 'aoeu' + y == 'aoeuaoeu'

	def testEquality
		x as dynamic = 2
		y as dynamic = 2
		assert x == y
		y = 4
		assert x <> y
		assert not x == y

		x = 'aoeu'
		y = 'AOEU'.toLower
		assert x == y
		y = 'AOUE'
		assert x <> y
		assert not x == y

		x = 'aoeu'
		y = 2
		assert x <> y
		assert not x == y

	def testComparison
		x as dynamic = 2
		y as dynamic = 4
		assert x < y
		assert y > x
		assert x <= y
		assert y >= x
		assert not x > y
		assert not y < x

	def testBinaryArithmetic
		x as dynamic?
		y as dynamic?
		x = 2
		y = 4
		assert x + y == 6
		assert x - y == -2
		assert y - x == 2
		assert x * y == 8
		assert x / y == 0.5
		assert y / x == 2.0
		assert y / x == 2
		assert x // y == 0
		assert y // x == 2
		assert x % y == 2
		assert y % x == 0

	def testUnaryArithmetic
		x as dynamic = 2
		assert x == 2
		x = -x
		assert x == -2
		x = -x
		assert x == 2
		x = 2.0
		x = -x
		x = 2.0f
		x = -x

		x = +x  # TODO warning. same
		assert x == -2
		x = -2
		x = +x  # TODO warning. same
		assert x == -2

	def testAugmentedAssignment
		x as dynamic = 1
		x += 1
		assert x == 2
		x *= 4
		assert x == 8
		x /= 2
		assert x == 4.0
		x -= 4
		assert x == 0

	def testBoolOps
		x as dynamic = 0
		y as dynamic = 1
		assert not (x and y)
		assert x or y
		x = 1
		assert x and y
		assert x or y
		x = 0
		y = 'aoeu'
		assert not (x and y)
		assert x or y
		x = 'aoeu'
		assert x and y
		assert x or y

		xq as dynamic? = nil
		yq as dynamic? = 1
		assert not (xq and yq)
		assert xq or yq
		xq = 1
		assert xq and yq
		assert xq or yq
		xq = 0
		yq = 'aoeu'
		assert not (xq and yq)
		assert xq or yq
		xq = 'aoeu'
		assert xq and yq
		assert xq or yq

		x = 0
		assert not x
		x = 'aoeu'
		assert not not x
		xq = nil
		assert not xq
		xq = 'aoeu'
		assert not not xq

		t as dynamic = [1, 2, 3]
		assert all t
		assert any t
		t.add(0)
		assert not all t
		assert any t
		t = [0]
		assert not all t
		assert not any t
		t.clear
		assert all t
		assert not any t
