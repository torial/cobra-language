class A<of T>

	cue init(value as T)
		_value = value
	
	pro value from var as T

	def one as int
		return 1


extend A<of X>

	def value2 as X
		return .value


class B<of T>
	inherits A<of T>
	
	cue init(value as T)
		base.init(value)


class P

	def main is shared
		a = A<of String>('hi')
		assert a.value == 'hi'
		assert a.value2 == 'hi'

		b = B<of String>('hi')
		assert b.value == 'hi'
		assert b.value2 == 'hi'
		