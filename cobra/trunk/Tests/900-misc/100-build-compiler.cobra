"""
Test that the current Cobra compiler can build itself.
"""

use System.Reflection


class TestCompilerBuild

	def main
		sep = Path.directorySeparatorChar
		cobraPath = CompileTimeInfo.cobraPath
		assert cobraPath.endsWith('Source[sep]cobra.exe')
		
		cobraDir = Path.getDirectoryName(cobraPath)
		Environment.currentDirectory = cobraDir to !
		
		.removeFiles

		p = System.Diagnostics.Process()
		p.startInfo.fileName = cobraPath
		args = [
			'-c',
			'-debug',
			'-turbo',
			'-t:lib',
			'-ert:yes',
			'-files:files-to-compile.text',
			'-namespace:Cobra.Compiler',
			'-out:Test.Cobra.Compiler.dll',
			'cobra.cobra',
		]
		p.startInfo.arguments = args.join(' ')
		output = CobraCore.runAndCaptureAllOutput(p).trim
		assert output == 'Compilation succeeded'
		assert File.exists('Test.Cobra.Compiler.dll')

		# Note that .NET/Windows requires a full path to the DLL
		# whereas Mono will load from the current directory
		fullPath = Path.combine(Environment.currentDirectory, 'Test.Cobra.Compiler.dll')
		assert File.exists(fullPath)
		assembly = Assembly.loadFrom(fullPath)

		assert assembly
		assert assembly.getName.name == 'Test.Cobra.Compiler'
		cmdLineClass = assembly.getType('Cobra.Compiler.CommandLine') to ?
		assert cmdLineClass
		cl = cmdLineClass()
		assert cl.versionString.length
		assert cl.versionString.startsWith('svn:')		

		# compile hello.cobra
		if not File.exists('hello.cobra')
			File.copy('Misc[sep]hello.cobra', 'hello.cobra', true)  # true = can overwrite
		cl = cmdLineClass()
		cl.run(['-c', 'hello.cobra'])

		# compile hello.cobra -ert
		if false
			# to-do: the compiler's ert takes the path from the entry executable which is the .exe
			# which is not the .dll. it needs to use the path from the .dll
			File.copy('Misc[sep]hello.cobra', 'hello.cobra', true)
			cl = cmdLineClass()
			cl.run(['-c', '-ert:yes', 'hello.cobra'])

		.removeFiles

		
	def removeFiles
		for fileName in 'Test.Cobra.Compiler.dll Test.Cobra.Compiler.dll.pdb Test.Cobra.Compiler.dll.mdb'.split
			try
				File.delete(fileName)
			catch UnauthorizedAccessException
				# .NET/Windows locks the .dll when it is loaded
				pass

