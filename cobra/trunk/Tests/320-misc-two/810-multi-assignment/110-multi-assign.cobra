
class MultiAssign

	var _i0 as int
	var _i1 as int

	var x0 as String =''
	var x1 as String =''
	
	pro p0 from _i0
	pro p1 from _i1
		
	def main is shared
		ma = MultiAssign()
		ma.nonLocalVar
		ma.forIEnum
		ma.forSwap

	def nonLocalVar
		_i0, _i1 = [3,4]
		assert _i0 == 3
		assert _i1 == 4
		
		.x0, .x1 = ['03','04']
		assert .x0 == '03'
		assert .x1 == '04'
	
		.x0, .x1 = .methRetList
		assert .x0 == 'a'
		assert .x1 == 'b'
		
		s = this
		s.x0, s.x1 = ['031','041']
		assert .x0 == '031'
		assert .x1 == '041'
	
		.p0, .p1 = [910, 911]
		assert .p0 == 910
		assert .p1 == 911
		
	def methRetList as List<of String>
		return ['a', 'b', 'c', 'd','e']
		
	def forIEnum
		list = [1, 2, 3, 4]  # TODO: should be an error with too many elements
		a, b = for k in list get k 
		assert a == 1
		assert b == 2
		
	def forSwap
		# common variable swap idiom ( python a,b = b,a)
		a = 99
		b = 100
		a, b = [b, a]
		assert a == 100
		assert b == 99
