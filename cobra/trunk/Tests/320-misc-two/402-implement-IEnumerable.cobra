class Numbers implements IEnumerable<of int>

	var _numbers = List<of int>()

	cue init(max as int)
		base.init
		_numbers = List<of int>()
		for i in max
			_numbers.add(i)

	def getEnumerator as IEnumerator<of int>
		return _numbers.getEnumerator
	
	def getEnumerator as System.Collections.IEnumerator
		implements System.Collections.IEnumerable
		# TODO: the following typecast is not required in C# and should not be in Cobra as well
		# since IEnumerator<of Record) inherits IEnumerator
		return .getEnumerator to System.Collections.IEnumerator


class Program

	def main is shared
		t = Numbers(10)
		for i in t, assert i < 10
		assert i == 9
