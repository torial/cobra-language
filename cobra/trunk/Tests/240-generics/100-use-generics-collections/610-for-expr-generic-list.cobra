class Test

	def main is shared
		t as IList<of int> = for x in [1, 2, 3] get x
		assert t.count==3
		assert t[0]==1
		assert t[1]==2
		assert t[2]==3

		assert (for x as int in [1, 2, 3] get x) == [1, 2, 3]
		assert [1, 2, 3] == for x in [1, 2, 3] get x

		assert (for x in [1, 2, 3] get x*x) == [1, 4, 9]
		assert [1, 4, 9] == for x in [1, 2, 3] get x*x

		assert (for s as String in ['aa', 'bbbb', 'cccccc'] get s.length) == [2, 4, 6]
		assert [2, 4, 6] == for s in ['aa', 'bbbb', 'cccccc'] get s.length

		# with `where`

		t = for x in [1, 2, 3] where x<>2 get x
		assert t.count==2
		assert t[0]==1
		assert t[1]==3

		assert (for x in [1, 2, 3] where x<>2 get x) == [1, 3]
		assert [1, 3] == for x in [1, 2, 3] where x<>2 get x

		assert (for x in [1, 2, 3] where x<>2 get x*x)==[1, 9]
		assert [1, 9] == for x in [1, 2, 3] where x<>2 get x*x

		assert (for s in ['aa', 'bbbb', 'cccccc'] where s<>'bbbb' get s.length) == [2, 6]
		assert [2, 6] == for s in ['aa', 'bbbb', 'cccccc'] where s<>'bbbb' get s.length

		# where with a non bool-typed expression
		stuff = 'aoeu   aoeu'
		words = for rawWord in stuff.split where rawWord.trim.length get rawWord.trim
		assert words == ['aoeu', 'aoeu']
