class Program

	def main is shared
		Program().foo(1)

	var _customer as Customer?
	
	get customer from var
	
	def foo(amount as int)
		_customer = Customer(1042.17)
		assert amount > Customer.balance  # .error. Cannot access instance member

	def sharedMethod is shared
		.foo(5)  # .error. Cannot access instance member


class Customer

	var _balance as decimal
	
	def init(balance as decimal)
		_balance = balance
		
	get balance as decimal
		return _balance


class SharedInvocationFromVarInit

	get bar as String is shared
		return 'bar'

	var _specs = {
		'foo': 'get [.bar]',  # you *can* invoke a shared member in string substitution... but only if it was declared earlier
	}
