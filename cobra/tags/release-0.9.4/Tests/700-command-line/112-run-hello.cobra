class RunNoOp

	shared

		var _verbose = true

		def main
			.run('-ert:no')
			.run('-ert:yes')
			.run('-ert:no')
			.run('-ert:no  -include-tests:no')
			.run('-ert:no  -include-tests:no  -dst:yes')
			.run('-ert:no  -include-tests:yes -dst:yes')
			.run('-ert:yes -include-tests:no  -dst:yes')
			.run('-ert:yes -include-tests:yes -dst:yes')

			.run('-ert:yes -contracts:none')
			.run('-ert:no -contracts:none')

			.run('-compile-if-needed')
			.run('-cin')

		def run(args as String)
			args += ' -debug'
			cobraPath = .findCobraExe

			if _verbose
				print
				print 'cobra', args
				print '[cobraPath] [args]'
				print '-------'
				.flush
			
			r = CobraCommand(cobraPath).run('[args] 110-hello.cobra')

			if _verbose
				if r.output.length
					print r.output stop
				print '-------'
				.flush

			assert r.exitCode == 0
			assert r.output.trim == 'Hello', args

		def findCobraExe as String
			# The use of .findCobraExe will find the one on the system PATH:
			# cobraPath = CobraCore.findCobraExe to !
			# But what we really want is the one that was built for this workspace:
			path = Path.combine(Path.combine(Path.combine(Path.combine(Environment.currentDirectory, '..'), '..'), 'Source'), 'cobra.exe')
			assert File.exists(path)
			return path

		def flush
			CobraCore.printDestination.flush
