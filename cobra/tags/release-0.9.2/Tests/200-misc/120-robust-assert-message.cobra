class Test

	get two as int
		return 2

	def toString as String is override
		throw InvalidOperationException('toString')
	
	def main
		try
			assert .two == 3
		catch exc as AssertException
			msg = exc.message  # run-time error: throws an exception, but we want it to be robust
			assert 'sourceSite' in msg
			assert 'for object' in msg
			assert '.two' in msg

/#
Cobra.Core.AssertException:
sourceSite = /Users/.../assert.cobra:12 in Test.main for object (.toTechString or .toString exception on a Test: InvalidOperationException: toString)
info       = nil
this       = test (Test)
    (.two == 3) = false
        .two = 2

  at Test.Main () [0x0001f] in /Users/chuck/Projects/Cobra/workspace-i/Source/x-assert.cobra:12 
#/
