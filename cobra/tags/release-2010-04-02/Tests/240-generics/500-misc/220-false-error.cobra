class A

	var list as List<of String>?

	def foo
		# uncommenting this line will eliminate the false error
		# d = Dictionary<of String, Object>()
		if .list
			for item in .list, print item
			# adding this line causes the false error further down:
			for a, b in .list, print a, b

	def main
		pass


# also, putting this class first eliminates the false error:

class B

	var _values as IDictionary<of String, Object>

	def _init
		_values = Dictionary<of String, Object>()
		# false error: Incompatible types. Cannot assign value of type
		# Dictionary<of String,Object> on the right to 
		# IDictionary<of String,Object> on the left.

		# ^ fixed 2009-10-17
		# need at least a _prepLibraryBox at beginning of .constructedTypeFor
